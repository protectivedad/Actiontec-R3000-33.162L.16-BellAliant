diff -Naur rng-tools-2/Makefile rng-tools-2-brcm/Makefile
--- rng-tools-2/Makefile	1969-12-31 20:00:00.000000000 -0400
+++ rng-tools-2-brcm/Makefile	2018-11-24 16:04:57.620286469 -0400
@@ -0,0 +1,85 @@
+# rngd makefile
+
+#CROSS_COMPILE=mips-linux-
+LDFLAGS = -Wl,--allow-shlib-undefined
+
+prefix=/usr
+SBINDIR=/sbin
+USRSBINDIR=${prefix}/sbin
+USRBINDIR=${prefix}/bin
+USRSHAREDIR=${prefix}/share
+
+# Uncomment this to get a shared binary. Call as rngd for the server,
+# and rngtest for the client
+COMBINED_BINARY=1
+
+
+INSTALL = install
+
+VER := 0.9.6
+
+
+OBJS_SHARED = fips.o
+RNGD_OBJS = rngd_entsource.o rngd_linux.o rngd.o
+RNGTEST_OBJS = stats.o rngtest.o
+
+EXEC1 = rngd
+OBJS1 = $(RNGD_OBJS) $(OBJS_SHARED)
+
+EXEC2 = rngtest
+OBJS2 = $(RNGTEST_OBJS) $(OBJS_SHARED)
+
+DAEMONS = rngd
+COMMANDS = rngtest
+
+CFLAGS += -s -W -Wall -Wstrict-prototypes -DVERSION='"$(VER)"' -I$(INC_BRCMDRIVER_PUB_PATH)/$(BRCM_BOARD) -I$(INC_BRCMSHARED_PUB_PATH)/$(BRCM_BOARD) 
+CFLAGS += -DBRCM_CMS_BUILD -DCMS_LOG3 -I$(BUILD_DIR)/userspace/public/include -I$(BUILD_DIR)/userspace/public/include/linux
+CFLAGS += -I$(TOOLCHAIN)/include
+CFLAGS += $(BRCM_WERROR_CFLAGS)
+
+LIBS=-Wl,-rpath,/lib:/lib/public:$(INSTALL_DIR)/lib:$(INSTALL_DIR)/lib/public -L$(INSTALL_DIR)/lib/public -lcms_util -lcms_msg
+
+#
+# Use between the following 2 lines depending on whether you want verbose debug or not.
+#
+#CFLAGS += -g -DVERBOSE
+CFLAGS += -Os -fomit-frame-pointer -DHAVE_CONFIG_H
+
+# BRCM begin
+#all: $(AR1)
+all: $(EXEC1) $(EXEC2)
+# BRCM end
+
+$(OBJS1) $(OBJS2) : *.h Makefile
+$(EXEC1) $(EXEC2) : Makefile
+
+.c.o:
+	$(CC) -c $(CFLAGS) $<
+
+# BRCM begin
+$(AR1): $(OBJS1)
+	$(AR) cvr $(AR1) $(OBJS1)
+# BRCM end
+
+$(EXEC1): $(OBJS1)
+	$(CC) $(LDFLAGS) $(OBJS1) -o $(EXEC1) $(LIBS)
+
+$(EXEC2): $(OBJS2)
+	$(CC) $(LDFLAGS) $(OBJS2) -o $(EXEC2)
+
+# BRCM begin
+#install:
+# BRCM end - Note that next line is inserted
+install: rngd rngtest
+	install -m 755 rngd $(INSTALL_DIR)/bin
+	$(STRIP) $(INSTALL_DIR)/bin/rngd
+	install -m 755 rngtest $(INSTALL_DIR)/bin
+	$(STRIP) $(INSTALL_DIR)/bin/rngtest
+
+dynamic: all install
+
+static: $(AR1)
+
+clean:
+	-rm -f rngd rngtest *.o core
+
diff -Naur rng-tools-2/rngd.c rng-tools-2-brcm/rngd.c
--- rng-tools-2/rngd.c	2004-08-24 15:00:00.000000000 -0300
+++ rng-tools-2-brcm/rngd.c	2018-11-24 16:04:57.620286469 -0400
@@ -43,7 +43,11 @@
 #include <fcntl.h>
 #include <errno.h>
 #include <string.h>
+/*
+ * brcm start 
 #include <argp.h>
+ * brcm end
+ */ 
 #include <syslog.h>
 
 #include "rngd.h"
@@ -72,6 +76,8 @@
 static char doc[] =
 	"Check and feed random data from hardware device to kernel entropy pool.\n";
 
+/* brcm start */
+#if 0
 static struct argp_option options[] = {
 	{ "foreground",	'f', 0, 0, "Do not fork and become a daemon" },
 
@@ -94,10 +100,12 @@
 
 	{ 0 },
 };
+#endif
+/* brcm end */
 
 static struct arguments default_arguments = {
 	.rng_name	= "/dev/hwrandom",
-	.random_name	= "/dev/random",
+	.random_name	= "/dev/urandom", /* brcm */
 	.poll_timeout	= 60,
 	.random_step	= 64,
 	.fill_watermark = 2048,
@@ -105,6 +113,8 @@
 };
 struct arguments *arguments = &default_arguments;
 
+/* brcm start */
+#if 0
 
 /*
  * command line processing
@@ -157,6 +167,8 @@
 
 static struct argp argp = { options, parse_opt, NULL, doc };
 
+#endif
+/* brcm end */
 
 static void do_loop(int random_step,
 		    double poll_timeout)
@@ -187,7 +199,11 @@
 
 int main(int argc, char **argv)
 {
+    /*
+     * brcm start  
 	argp_parse(&argp, argc, argv, 0, 0, arguments);
+     * brcm end
+     */
 
 	/* Init entropy source, and open TRNG device */
 	init_entropy_source(arguments->rng_name);
diff -Naur rng-tools-2/rngtest.c rng-tools-2-brcm/rngtest.c
--- rng-tools-2/rngtest.c	2004-04-15 02:09:31.000000000 -0300
+++ rng-tools-2-brcm/rngtest.c	2018-11-24 16:04:57.620286469 -0400
@@ -36,8 +36,13 @@
 #include <sys/time.h>
 #include <time.h>
 #include <string.h>
+/*
+ *  brcm start
 #include <argp.h>
+ * brcm end
+ */
 #include <signal.h>
+#include <errno.h>
 
 #include "fips.h"
 #include "stats.h"
@@ -56,8 +61,12 @@
 	"This is free software; see the source for copying conditions.  There is NO "
 	"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.";
 
+/* brcm start */
+#if 0
 const char *argp_program_bug_address = PACKAGE_BUGREPORT;
 error_t argp_err_exit_status = EXIT_USAGE;
+#endif
+/* brcm end */
 
 static char doc[] =
 	"Check the randomness of data using FIPS 140-2 RNG tests.\n"
@@ -67,6 +76,8 @@
 	"If no errors happen nor any blocks fail the FIPS tests, the program will return "
 	"exit status 0.  If any blocks fail the tests, the exit status will be 1.\n";
 
+/* brcm start */
+#if 0
 static struct argp_option options[] = {
 	{ "blockcount", 'c', "n", 0,
 	  "Exit after processing n blocks (default: 0)" },
@@ -82,6 +93,8 @@
 
 	{ 0 },
 };
+#endif
+/* brcm end */
 
 struct arguments {
 	int blockstats;
@@ -97,6 +110,8 @@
 	.blockcount	= 0,
 };
 
+/* brcm start */
+#if 0
 static error_t parse_opt (int key, char *arg, struct argp_state *state)
 {
 	struct arguments *arguments = state->input;
@@ -137,6 +152,8 @@
 
 	return 0;
 }
+#endif
+/* brcm end */
 
 /*
  * Globals
@@ -170,7 +187,9 @@
 
 /* Command line arguments and processing */
 struct arguments *arguments = &default_arguments;
+/*
 static struct argp argp = { options, parse_opt, NULL, doc };
+*/
 
 /* signals */
 static volatile int gotsigterm = 0;	/* Received SIGTERM/SIGINT */
@@ -393,7 +412,11 @@
 
 int main(int argc, char **argv)
 {
+	/*
+         * brcm start
 	argp_parse(&argp, argc, argv, 0, 0, arguments);
+        * brcm end
+	*/
 
 	if (!arguments->pipemode)
 		fprintf(stderr, "%s\n\n",
diff -Naur rng-tools-2/rng-tools-config.h rng-tools-2-brcm/rng-tools-config.h
--- rng-tools-2/rng-tools-config.h	1969-12-31 20:00:00.000000000 -0400
+++ rng-tools-2-brcm/rng-tools-config.h	2018-11-24 16:04:57.620286469 -0400
@@ -0,0 +1,23 @@
+/* rng-tools-config.h.  Generated by configure.  */
+/* rng-tools-config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Name of package */
+#define PACKAGE "rng-tools"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "Jeff Garzik <jgarzik@pobox.com>"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "rng-tools"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "rng-tools 2"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "rng-tools"
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "2"
+
+/* Version number of package */
+#define VERSION "2"
